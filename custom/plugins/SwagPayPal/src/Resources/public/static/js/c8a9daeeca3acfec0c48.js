(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[5615],{866:function(){},5615:function(t,a,s){"use strict";s.r(a),s.d(a,{default:function(){return o}}),s(1887);let e="missing",n="invalid";var o=Shopware.Component.wrapComponentConfig({template:'<sw-card\n    class="swag-paypal-settings-webhook"\n    position-identifier="swag-paypal-settings-webhook"\n    :is-loading="status !== \'none\'"\n>\n    <template #title>\n        <span class="sw-card__title">\n            {{ $t(\'swag-paypal-settings.webhook.title\') }}\n        </span>\n\n        <sw-label\n            class="swag-paypal-settings-webhook__label"\n            appearance="pill"\n            size="medium"\n            :variant="webhookStatusVariant"\n        >\n            <sw-color-badge :rounded="true" :variant="webhookStatusVariant" />\n            <span>{{ webhookStatusLabel }}</span>\n        </sw-label>\n    </template>\n\n    <span class="swag-paypal-settings-webhook__info-text">\n        {{ $t(\'swag-paypal-settings.webhook.info\') }}\n    </span>\n\n    <sw-button\n        class="swag-paypal-settings-webhook__refresh-button"\n        variant=""\n        :disabled="status !== \'none\' || !allowRefresh || !acl.can(\'swag_paypal.editor\')"\n        :is-loading="isRefreshing"\n        @click="onRefreshWebhook"\n    >\n        {{ $t(\'swag-paypal-settings.webhook.buttonRefresh\') }}\n    </sw-button>\n</sw-card>\n',compatConfig:Shopware.compatConfig,inject:["acl","SwagPayPalWebhookService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification")],data(){return{allWebhookStatus:{},status:"none"}},computed:{settingsStore(){return Shopware.Store.get("swagPayPalSettings")},webhookStatus(){return this.allWebhookStatus[String(this.settingsStore.salesChannel)]},webhookStatusLabel(){return this.$t(`swag-paypal-settings.webhook.status.${this.webhookStatus||"unknown"}`)},webhookStatusVariant(){switch(this.webhookStatus){case e:return"danger";case n:return"warning";case"valid":return"success";default:return"neutral"}},allowRefresh(){return[n,e].includes(this.webhookStatus??"")}},watch:{"settingsStore.salesChannel":{immediate:!0,handler(){this.fetchWebhookStatus(this.settingsStore.salesChannel)}}},methods:{fetchWebhookStatus(t){this.webhookStatus||(this.status="fetching",this.SwagPayPalWebhookService.status(t).then(a=>{this.allWebhookStatus[String(t)]=a.result,this.status="none"}).catch(t=>{this.createNotificationError({title:this.$t("swag-paypal.notifications.webhook.title"),message:this.$t("swag-paypal.notifications.webhook.errorMessage",{message:this.createMessageFromError(t)})})}))},async onRefreshWebhook(){this.status="refreshing",await this.SwagPayPalWebhookService.register(this.settingsStore.salesChannel).catch(t=>{this.createNotificationError({title:this.$t("swag-paypal.notifications.webhook.title"),message:this.$t("swag-paypal.notifications.webhook.errorMessage",{message:this.createMessageFromError(t)})})}),this.status="none",this.fetchWebhookStatus(this.settingsStore.salesChannel)}}})},1887:function(t,a,s){var e=s(866);e.__esModule&&(e=e.default),"string"==typeof e&&(e=[[t.id,e,""]]),e.locals&&(t.exports=e.locals),s(5346).Z("77a62a2e",e,!0,{})}}]);